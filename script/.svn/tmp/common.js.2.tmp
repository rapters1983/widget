<<<<<<< .mine
apiready = function() {
  alert('pwerwe')
}=======
/* =============================================
 * v20141018.2
 * =============================================
 * Copyright 谢武
 *
 * 框架方法和配置
 * ============================================= */

var BASE_URL = 'http://m.zhanqi.tv/';
// ajax地址配置
// var URLConfig = {
//   'gameIndex': BASE_URL + 'api/static/game.index/index.json'
// , 'liveIndex': BASE_URL + 'api/static/live.index/index.json'
// , 'gameList': BASE_URL + 'api/static/game.lives/6/1-4.json'
// }
function URLConfig(which, data) {
  switch (which) {
    case 'hotLive':
      return BASE_URL + '/api/static/game.lives/'+data['id']+'/'+data['start']+'-'+data['count']+'.json';
    case 'gameLiveIndex':
      return BASE_URL + '/api/static/game.lives/'+data['id']+'/'+data['num']+'-'+data['page']+'.json';
    case 'otherLiveIndex':
      return BASE_URL + '/api/static/live.others/4-1-10,13,6.json';
    case 'liveIndex':
      return BASE_URL + 'api/static/live.index/index.json';
    case 'liveList':
      return BASE_URL + '/api/static/live.hots/'+data['num']+'-'+data['page']+'.json';
    case 'gameList':
      return BASE_URL + 'api/static/game.lists/'+data['num']+'-'+data['page']+'.json';
    case 'liveList':
      return BASE_URL + 'api/static/game.lives/'+data['id']+'/'+data['num']+'-'+data['page']+'.json';
    case 'liveRoomInfo':  // 获取直播播放信息
      return BASE_URL + 'api/static/live.roomid/'+data['roomid']+'.json';
    case 'videoRoomInfo': // 获取视频播放信息
      return BASE_URL + 'api/static/video.videoid/'+data['roomid']+'.json';
    case 'login':
      return BASE_URL + 'api/auth/user.login';
    case 'register':
      return BASE_URL + 'api/auth/user.register';
    case 'logout':
      return BASE_URL + 'api/auth/user.logout';
    case 'bindPhone':
      return BASE_URL + '/api/user/user.bind_mobile';
    case 'nickname':
      return  BASE_URL + '/api/public/validate.nickname';
    case 'editInfo': 
      return  BASE_URL + '/api/user/user.edit';
    case 'avatar': 
      return  BASE_URL + '/api/user/upload.avatar';
    case 'charge': 
      return  BASE_URL + '/api/user/log.charge?stime='+data['stime']+'&etime='+data['etime']+'&nums='+data['nums']+'&start='+data['start'];
    case 'giftuse': 
      return  BASE_URL + '/api/user/log.giftuse?stime='+data['stime']+'&etime='+data['etime']+'&nums='+data['nums']+'&start='+data['start'];
	  case 'getGiftList':
      return BASE_URL + '/api/static/live.gifts/'+data['roomid']+'.json';
  }
}

// 取url参数，不推荐使用
function getParam(B, E) {
  var params = null;
  if (typeof E == 'undefined') {
    E = null
  }
  if (null == params) {
    params = [];
    if (location.search.length > 0) {
      var C = decodeURIComponent(location.search).substr(1).split('&');
      for (var D = 0; D < C.length; ++D) {
        var A = C[D].split('=');
        params[A[0]] = A[1]
      }
    }
  }
  return (typeof params[B] == 'undefined') ? E : params[B]
};

/* 框架初始化 */
+function(win, $) {
  var yp = {};
  /* 语法糖扩展 */
  // 对象扩展
  yp.mix = $.extend;
  // 对象循环
  yp.each = function(arr, callback) {
    return $.each(arr, function(a, b) {
      return callback(b, a);
    });
  };
  // 格式化
  yp.format = function(str, data) {
    if (!str) {
      throw new Error('yp.format字符串参数不能为空');
      return '';
    }
    var re = this.re || /\${([\s\S]+?)}/g
    if (typeof data !== 'object') data = [].slice.call(arguments, 1);
    return str.replace(re, function($0, $1) {
      return data[$1] != null ? data[$1] : '';
    });
  };
  // 获取随机数
  yp.getRandom = function(min, max) {
    return Math.round(Math.random() * (max - min) + min);
  };
  // 获取url参数
  yp.query = function(key, context) {
    var result
    var regParam = new RegExp('([\?\&])' + key + '=([^\&]*)(\&?)', 'i')
    context = context || location.search;
    return (result = regParam.exec(context)) ? result[2] : null;
  };
  // 空函数
  yp.noop = $.noop;

  yp.mix(yp, {
    global: {}  /*全局变量*/
  , config: {}  /*全局配置*/
  , loader: {}  /*资源加载*/
  , loger: {}   /*日志输出*/
  , mods: {}    /*全局模块*/
  , cache: {}   /*全局缓存*/
  , event: {}   /*全局事件*/
  , ui: {}      /*全局UI*/
  , system: {}  /*系统函数*/
  });

  win.yp = yp;
}(window, $);

/* 全局事件管理event */
+function($, yp) {
var 
  exports = yp
, ypapi = exports.event
, o = $({})
  
  ypapi.sub = function() {
    var eventName = arguments[0]
    var data = o.data(eventName.replace(/\..*/, ''))
    if (data) {
      var callback = arguments[1]
      callback(data);
      return;
    }
    o.on.apply(o, arguments);
  };
  ypapi.unsub = function() {
    o.off.apply(o, arguments);
  };
  ypapi.pub = function() {
    o.trigger.apply(o, arguments);
    var eventName = arguments[0]
    return {
      cache: function(val) {
        eventName = typeof eventName === 'string' ? eventName : eventName.type + '.' + eventName.namespace;
        o.data(eventName, val || true);
      }
    }
  };

  // 系统观察者
  exports.sub = $.sub = ypapi.sub;
  exports.unsub = $.unsub = ypapi.unsub;
  exports.pub = $.pub = ypapi.pub;
}($, yp);

/* 全局数据加载模块 */
+function($, yp, noapi) {
 var
  win = this
, exports = yp
, loader = exports.loader || {}

  var ajax = function(options, callback) {
    options = yp.mix({
      method: 'post'
    , dataType: 'json'
    }, options);

    $.pub('loader/ajax/start', options);
    api.ajax(options, function(ret, err) {
      $.pub('loader/ajax/always');
      if (ret) {
        var e = $.Event('loader/ajax/done');
        $.pub(e, ret);
        if (e.isDefaultPrevented()) return;
      } else {
        var e = $.Event('loader/ajax/fail');
        $.pub(e, err);
        if (e.isDefaultPrevented()) return;
      }
      callback(ret, err);
    });
  };
  yp.ajax = loader.ajax = ajax;
}($, yp, api);

/* 全局UI模块 */
+function($, yp, noapi) {
var
  win = this
, exports = yp
, ui = exports.ui || {}

  // loading模块
  +function(ui, api) {
    var nDelay = 300
    var nCount = 0
    var timer = null

    var oLoading = {
      toggle: function(flag) {
        if (flag) {
          api.showProgress({
            style: 'default'
          , animationType: 'fade'
          , title: '努力加载中...'
          , text: '先喝杯茶...'
          , modal: false
          });
        } else {
          api.hideProgress();
        };
      }
    , ajaxStart: function() {
        ++nCount;
        if (!timer) {
          timer = setTimeout(function() {
            oLoading.toggle(true);
          }, nDelay);
        }
      }
    , ajaxAlways: function() {
        if (--nCount <= 0) {
          clearTimeout(timer);
          timer = null;
          oLoading.toggle(false);
        }
      }
    };
    $.sub('loader/ajax/start.ui', oLoading.ajaxStart);
    $.sub('loader/ajax/always.ui', oLoading.ajaxAlways);

    ui.oLoading = oLoading;
  }(ui, api);

  // 监听全局ajax事件
  +function(ui) {
    var ypapi = {
      init: function() {
        ypapi.oMap = yp.mix({
          // 登陆超时跳转
          50001: function(msg) {
            var sUrl = msg.data
            if (typeof sUrl === 'string') {
              var sMsg = msg.message || msg.msg;
              var jumpTo = function() {
                location.href = sUrl;
              };
              if (sMsg) alert(sMsg, jumpTo);
              else jumpTo();
            }
          }
        }, window.oPageConfig && window.oPageConfig.oAjaxCodeMap);

        ///$.sub('loader/ajax/done.ui', ypapi.ajaxMsgCheck);
      }
    , ajaxMsgCheck: function(e, msg) {
        if ($.isEmptyObject(msg)) {
          alert('数据接口返回为空对象，请检查');
          return false;
        }
        var fError = ypapi.oMap[msg.code]
        if (fError) {
          fError(msg);
          return false;
        }
      }
    };
    ypapi.init();
    ui.oAjaxCode = ypapi;
  }(ui);

  // 监听错误消息
  $.sub('error/ui.ui', function(e, msg) {
    var e = $.Event('yp/ui/error/' + msg.code)
    yp.pub(e, msg.data);
    if (e.isDefaultPrevented()) return;
    alert(msg.message);
  });
  $.sub('error/sys.ui', function(e, msg) {
    throw new Error('yp提示：' + msg.message);
  });

  // 系统异常错误提示
  yp.sub('page/error/sys.ui.event', function(e, data) {
    $.pub('error/sys', data);
  });
}($, yp, api);>>>>>>> .r148
